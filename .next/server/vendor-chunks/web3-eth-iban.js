"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-iban";
exports.ids = ["vendor-chunks/web3-eth-iban"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-iban/lib/esm/iban.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/iban.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Iban: () => (/* binding */ Iban)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n/**\n * Converts Ethereum addresses to IBAN or BBAN addresses and vice versa.\n */\nclass Iban {\n    /**\n     * Construct a direct or indirect IBAN that has conversion methods and validity checks.\n     * If the provided string was not of either the length of a direct IBAN (34 or 35),\n     * nor the length of an indirect IBAN (20), an Error will be thrown ('Invalid IBAN was provided').\n     *\n     * @param iban - a Direct or an Indirect IBAN\n     * @returns - Iban instance\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n     * > Iban { _iban: 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS' }\n     * ```\n     */\n    constructor(iban) {\n        /**\n         * This method should be used to create the equivalent ethereum address for the early provided Direct IBAN address.\n         * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n         * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n         * Note: this is also available as a static method.\n         *\n         * @return the equivalent ethereum address\n         *\n         * @example\n         * ```ts\n         * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n         * iban.toAddress();\n         * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n         * ```\n         */\n        this.toAddress = () => {\n            if (this.isDirect()) {\n                // check if Iban can be converted to an address\n                const base36 = this._iban.slice(4);\n                const parsedBigInt = Iban._parseInt(base36, 36); // convert the base36 string to a bigint\n                const paddedBigInt = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.leftPad)(parsedBigInt, 40);\n                return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(paddedBigInt);\n            }\n            throw new Error('Iban is indirect and cannot be converted. Must be length of 34 or 35');\n        };\n        if (Iban.isIndirect(iban) || Iban.isDirect(iban)) {\n            this._iban = iban;\n        }\n        else {\n            throw new Error('Invalid IBAN was provided');\n        }\n    }\n    /**\n     * A static method that checks if an IBAN is Direct.\n     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n     * Note: this is also available as a method at an Iban instance.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isDirect(\"XE81ETHXREGGAVOFYORK\");\n     * > false\n     * ```\n     */\n    static isDirect(iban) {\n        return iban.length === 34 || iban.length === 35;\n    }\n    /**\n     * An instance method that checks if iban number is Direct.\n     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n     * Note: this is also available as a static method.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isDirect();\n     * > false\n     * ```\n     */\n    isDirect() {\n        return Iban.isDirect(this._iban);\n    }\n    /**\n     * A static method that checks if an IBAN is Indirect.\n     * It actually check the length of the provided variable and, only if it is 20, it returns true.\n     * Note: this is also available as a method at an Iban instance.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isIndirect(\"XE81ETHXREGGAVOFYORK\");\n     * > true\n     * ```\n     */\n    static isIndirect(iban) {\n        return iban.length === 20;\n    }\n    /**\n     * check if iban number if indirect\n     * It actually check the length of the provided variable and, only if it is 20, it returns true.\n     * Note: this is also available as a static method.\n     * @param iban - an IBAN to be checked\n     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isIndirect();\n     * > true\n     * ```\n     */\n    isIndirect() {\n        return Iban.isIndirect(this._iban);\n    }\n    /**\n     * This method could be used to check if a given string is valid IBAN object.\n     * Note: this is also available as a method at an Iban instance.\n     *\n     * @param iban - a string to be checked if it is in IBAN\n     * @returns - true if it is valid IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.isValid(\"XE81ETHXREGGAVOFYORK\");\n     * > true\n     *\n     * web3.eth.Iban.isValid(\"XE82ETHXREGGAVOFYORK\");\n     * > false // because the checksum is incorrect\n     * ```\n     */\n    static isValid(iban) {\n        return (/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(iban) &&\n            Iban._mod9710(Iban._iso13616Prepare(iban)) === 1);\n    }\n    /**\n     * Should be called to check if the early provided IBAN is correct.\n     * Note: this is also available as a static method.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.isValid();\n     * > true\n     *\n     * const iban = new web3.eth.Iban(\"XE82ETHXREGGAVOFYORK\");\n     * iban.isValid();\n     * > false // because the checksum is incorrect\n     * ```\n     */\n    isValid() {\n        return Iban.isValid(this._iban);\n    }\n    /**\n     * Convert the passed BBAN to an IBAN for this country specification.\n     * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n     *\n     * @param bban - the BBAN to convert to IBAN\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.fromBban('ETHXREGGAVOFYORK');\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static fromBban(bban) {\n        const countryCode = 'XE';\n        const remainder = this._mod9710(this._iso13616Prepare(`${countryCode}00${bban}`));\n        const checkDigit = `0${(98 - remainder).toString()}`.slice(-2);\n        return new Iban(`${countryCode}${checkDigit}${bban}`);\n    }\n    /**\n     * Should be used to create IBAN object for given institution and identifier\n     *\n     * @param options - an object holds the `institution` and the `identifier` which will be composed to create an `Iban` object from.\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.createIndirect({\n     *     institution: \"XREG\",\n     *     identifier: \"GAVOFYORK\"\n     * });\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static createIndirect(options) {\n        return Iban.fromBban(`ETH${options.institution}${options.identifier}`);\n    }\n    /**\n     * This method should be used to create iban object from an Ethereum address.\n     *\n     * @param address - an Ethereum address\n     * @returns an Iban class instance that holds the equivalent IBAN\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.fromAddress(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n     * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n     * ```\n     */\n    static fromAddress(address) {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(address)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(address);\n        }\n        const num = BigInt((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(address));\n        const base36 = num.toString(36);\n        const padded = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.leftPad)(base36, 15);\n        return Iban.fromBban(padded.toUpperCase());\n    }\n    /**\n     * This method should be used to create IBAN address from an Ethereum address\n     *\n     * @param address - an Ethereum address\n     * @return the equivalent IBAN address\n     *\n     * @example\n     * ```ts\n     * web3.eth.Iban.toIban(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n     * > \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"\n     * ```\n     */\n    static toIban(address) {\n        return Iban.fromAddress(address).toString();\n    }\n    /**\n     * Should be called to get client identifier within institution\n     *\n     * @return the client of the IBAN instance.\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.client();\n     * > 'GAVOFYORK'\n     * ```\n     */\n    client() {\n        return this.isIndirect() ? this._iban.slice(11) : '';\n    }\n    /**\n     * Returns the IBAN checksum of the early provided IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.checksum();\n     * > \"81\"\n     * ```\n     *\n     */\n    checksum() {\n        return this._iban.slice(2, 4);\n    }\n    /**\n     * Returns institution identifier from the early provided  IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n     * iban.institution();\n     * > 'XREG'\n     * ```\n     */\n    institution() {\n        return this.isIndirect() ? this._iban.slice(7, 11) : '';\n    }\n    /**\n     * Simply returns the early provided IBAN\n     *\n     * @example\n     * ```ts\n     * const iban = new web3.eth.Iban('XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS');\n     * iban.toString();\n     * > 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS'\n     * ```\n     */\n    toString() {\n        return this._iban;\n    }\n}\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n */\nIban._iso13616Prepare = (iban) => {\n    const A = 'A'.charCodeAt(0);\n    const Z = 'Z'.charCodeAt(0);\n    const upperIban = iban.toUpperCase();\n    const modifiedIban = `${upperIban.slice(4)}${upperIban.slice(0, 4)}`;\n    return modifiedIban\n        .split('')\n        .map(n => {\n        const code = n.charCodeAt(0);\n        if (code >= A && code <= Z) {\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        }\n        return n;\n    })\n        .join('');\n};\n/**\n * return the bigint of the given string with the specified base\n */\nIban._parseInt = (str, base) => [...str].reduce((acc, curr) => BigInt(parseInt(curr, base)) + BigInt(base) * acc, BigInt(0));\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n */\nIban._mod9710 = (iban) => {\n    let remainder = iban;\n    let block;\n    while (remainder.length > 2) {\n        block = remainder.slice(0, 9);\n        remainder = `${(parseInt(block, 10) % 97).toString()}${remainder.slice(block.length)}`;\n    }\n    return parseInt(remainder, 10) % 97;\n};\n/**\n * This method should be used to create an ethereum address from a Direct IBAN address.\n * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n * Note: this is also available as a method at an Iban instance.\n *\n * @param iban - a Direct IBAN address\n * @return the equivalent ethereum address\n *\n * @example\n * ```ts\n * web3.eth.Iban.toAddress(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n * ```\n */\nIban.toAddress = (iban) => {\n    const ibanObject = new Iban(iban);\n    return ibanObject.toAddress();\n};\n//# sourceMappingURL=iban.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-iban/lib/esm/iban.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-iban/lib/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Iban: () => (/* reexport safe */ _iban_js__WEBPACK_IMPORTED_MODULE_0__.Iban),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _iban_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iban.js */ \"(ssr)/./node_modules/web3-eth-iban/lib/esm/iban.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-iban/lib/esm/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_iban_js__WEBPACK_IMPORTED_MODULE_0__.Iban);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtaWJhbi9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ2lDO0FBQ1A7QUFDQztBQUMzQixpRUFBZSwwQ0FBSSxFQUFDO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtaWJhbi9saWIvZXNtL2luZGV4LmpzPzMzNGUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBJYmFuIH0gZnJvbSAnLi9pYmFuLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaWJhbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbmV4cG9ydCBkZWZhdWx0IEliYW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-iban/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-iban/lib/esm/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtaWJhbi9saWIvZXNtL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWliYW4vbGliL2VzbS90eXBlcy5qcz84ZGM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-iban/lib/esm/types.js\n");

/***/ })

};
;